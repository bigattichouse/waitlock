# Makefile.in for waitlock/src
# Configure-generated Makefile

PACKAGE = @PACKAGE_NAME@
VERSION = @PACKAGE_VERSION@

# Build configuration
CC = @CC@
CFLAGS = @CFLAGS@ @DEFS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@

# Installation paths
prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@

# Build tools
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@

# Source directories
srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@

# Build directories (can be overridden)
BUILDDIR ?= .
BINDIR ?= .
OBJDIR ?= .

# Source files
MODULES = core lock process signal checksum test

# Main module
MAIN_SRCS = waitlock.c
MAIN_OBJS = $(OBJDIR)/waitlock.o

# Core module
CORE_SRCS = core/core.c
CORE_OBJS = $(OBJDIR)/core.o

# Lock module
LOCK_SRCS = lock/lock.c
LOCK_OBJS = $(OBJDIR)/lock.o

# Process module
PROCESS_SRCS = process/process.c
PROCESS_OBJS = $(OBJDIR)/process.o

# Signal module
SIGNAL_SRCS = signal/signal.c
SIGNAL_OBJS = $(OBJDIR)/signal.o

# Checksum module
CHECKSUM_SRCS = checksum/checksum.c
CHECKSUM_OBJS = $(OBJDIR)/checksum.o

# Test module
TEST_SRCS = test/test.c test/unit_tests.c
TEST_OBJS = $(OBJDIR)/test.o $(OBJDIR)/unit_tests.o

TEST_CHECKSUM_SRCS = test/test_checksum.c
TEST_CHECKSUM_OBJS = $(OBJDIR)/test_checksum.o

TEST_CORE_SRCS = test/test_core.c
TEST_CORE_OBJS = $(OBJDIR)/test_core.o

TEST_FRAMEWORK_SRCS = test/test_framework.c
TEST_FRAMEWORK_OBJS = $(OBJDIR)/test_framework.o

TEST_INTEGRATION_SRCS = test/test_integration.c
TEST_INTEGRATION_OBJS = $(OBJDIR)/test_integration.o

TEST_LOCK_SRCS = test/test_lock.c
TEST_LOCK_OBJS = $(OBJDIR)/test_lock.o

TEST_PROCESS_SRCS = test/test_process.c
TEST_PROCESS_OBJS = $(OBJDIR)/test_process.o

TEST_SIGNAL_SRCS = test/test_signal.c
TEST_SIGNAL_OBJS = $(OBJDIR)/test_signal.o

# All source files
PIPE_COORDINATOR_SRCS = pipe_coordinator/pipe_coordinator.c
PIPE_COORDINATOR_OBJS = $(OBJDIR)/pipe_coordinator.o

# All source files
ALL_SRCS = $(MAIN_SRCS) $(CORE_SRCS) $(LOCK_SRCS) $(PROCESS_SRCS) $(SIGNAL_SRCS) $(CHECKSUM_SRCS) $(TEST_SRCS) $(PIPE_COORDINATOR_SRCS) $(TEST_CHECKSUM_SRCS) $(TEST_CORE_SRCS) $(TEST_FRAMEWORK_SRCS) $(TEST_INTEGRATION_SRCS) $(TEST_LOCK_SRCS) $(TEST_PROCESS_SRCS) $(TEST_SIGNAL_SRCS)
ALL_OBJS = $(MAIN_OBJS) $(CORE_OBJS) $(LOCK_OBJS) $(PROCESS_OBJS) $(SIGNAL_OBJS) $(CHECKSUM_OBJS) $(TEST_OBJS) $(PIPE_COORDINATOR_OBJS) $(TEST_CHECKSUM_OBJS) $(TEST_CORE_OBJS) $(TEST_FRAMEWORK_OBJS) $(TEST_INTEGRATION_OBJS) $(TEST_LOCK_OBJS) $(TEST_PROCESS_OBJS) $(TEST_SIGNAL_OBJS)

# Main target
TARGET = $(BINDIR)/waitlock

# Build rules
all: $(TARGET)

$(TARGET): $(ALL_OBJS)
	mkdir -p $(BINDIR)
	$(CC) $(LDFLAGS) -o $@ $^ $(LIBS)

# Object file rules
$(OBJDIR)/waitlock.o: waitlock.c waitlock.h
	mkdir -p $(OBJDIR)
	$(CC) $(CFLAGS) -c -o $@ $<

$(OBJDIR)/core.o: core/core.c waitlock.h
	mkdir -p $(OBJDIR)
	$(CC) $(CFLAGS) -c -o $@ $<

$(OBJDIR)/lock.o: lock/lock.c waitlock.h
	mkdir -p $(OBJDIR)
	$(CC) $(CFLAGS) -c -o $@ $<

$(OBJDIR)/process.o: process/process.c waitlock.h
	mkdir -p $(OBJDIR)
	$(CC) $(CFLAGS) -c -o $@ $<

$(OBJDIR)/signal.o: signal/signal.c waitlock.h
	mkdir -p $(OBJDIR)
	$(CC) $(CFLAGS) -c -o $@ $<

$(OBJDIR)/checksum.o: checksum/checksum.c waitlock.h
	mkdir -p $(OBJDIR)
	$(CC) $(CFLAGS) -c -o $@ $<

$(OBJDIR)/test.o: test/test.c waitlock.h
	mkdir -p $(OBJDIR)
	$(CC) $(CFLAGS) -c -o $@ $<

$(OBJDIR)/unit_tests.o: test/unit_tests.c waitlock.h
	mkdir -p $(OBJDIR)
	$(CC) $(CFLAGS) -c -o $@ $<

$(OBJDIR)/pipe_coordinator.o: pipe_coordinator/pipe_coordinator.c pipe_coordinator/pipe_coordinator.h
	mkdir -p $(OBJDIR)
	$(CC) $(CFLAGS) -c -o $@ $<

$(OBJDIR)/test_checksum.o: test/test_checksum.c waitlock.h
	mkdir -p $(OBJDIR)
	$(CC) $(CFLAGS) -c -o $@ $<

$(OBJDIR)/test_core.o: test/test_core.c waitlock.h
	mkdir -p $(OBJDIR)
	$(CC) $(CFLAGS) -c -o $@ $<

$(OBJDIR)/test_framework.o: test/test_framework.c waitlock.h
	mkdir -p $(OBJDIR)
	$(CC) $(CFLAGS) -c -o $@ $<

$(OBJDIR)/test_integration.o: test/test_integration.c waitlock.h
	mkdir -p $(OBJDIR)
	$(CC) $(CFLAGS) -c -o $@ $<

$(OBJDIR)/test_lock.o: test/test_lock.c waitlock.h
	mkdir -p $(OBJDIR)
	$(CC) $(CFLAGS) -c -o $@ $<

$(OBJDIR)/test_process.o: test/test_process.c waitlock.h
	mkdir -p $(OBJDIR)
	$(CC) $(CFLAGS) -c -o $@ $<

$(OBJDIR)/test_signal.o: test/test_signal.c waitlock.h
	mkdir -p $(OBJDIR)
	$(CC) $(CFLAGS) -c -o $@ $<

# Clean targets
clean:
	rm -f $(ALL_OBJS) $(TARGET)
	if [ "$(OBJDIR)" != "." ]; then rm -rf $(OBJDIR); fi
	if [ "$(BINDIR)" != "." ]; then rm -rf $(BINDIR); fi

distclean: clean
	rm -f Makefile

# Test targets
check: $(TARGET)
	@echo "Running basic tests..."
	@$(TARGET) --test
	@echo "All tests passed!"

test: check

# Development targets
debug: CFLAGS += -g -DDEBUG
debug: $(TARGET)

# Install targets (handled by parent Makefile)
install: $(TARGET)
	$(INSTALL_PROGRAM) $(TARGET) $(DESTDIR)$(bindir)/$(TARGET)

# Dependency tracking
depend:
	$(CC) -MM $(CFLAGS) $(ALL_SRCS) > .depend

-include .depend

.PHONY: all clean distclean check test debug install depend